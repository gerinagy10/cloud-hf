name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-dockerize:
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:20.10.7
        options: --privileged
        ports:
          - 2375:2375

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install and build React frontend
        working-directory: ./frontend
        run: |
          npm install
          npm run build

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies for microservices
        run: |
          pip install -r notifier/requirements.txt
          pip install -r "object detection"/requirements.txt
          pip install -r storage/requirements.txt

      - name: Build Docker image for frontend
        run: docker build -t myapp/frontend ./frontend

      - name: Build Docker image for notifier
        run: docker build -t myapp/notifier ./notifier

      - name: Build Docker image for object detection
        run: docker build -t myapp/object-detection "./object detection"

      - name: Build Docker image for storage
        run: docker build -t myapp/storage ./storage

      # Optional: Push to Docker Hub or another registry
      # - name: Log in to Docker Hub
      #   run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # - name: Push Docker images
      #   run: |
      #     docker tag myapp/frontend yourdockerhub/frontend:latest
      #     docker push yourdockerhub/frontend:latest
      #     # Repeat for other services...
