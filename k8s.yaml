---
# cloudhf-rabbitmq Deployment and Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudhf-rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management
          ports:
            - containerPort: 5672
            - containerPort: 15672
---
apiVersion: v1
kind: Service
metadata:
  name: cloudhf-rabbitmq
spec:
  selector:
    app: rabbitmq
  ports:
    - name: amqp
      port: 5672
      targetPort: 5672
    - name: ui
      port: 15672
      targetPort: 15672
  type: ClusterIP
---
# cloudhf-postgres Deployment and Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudhf-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:14
          env:
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: POSTGRES_DB
              value: "cloudhf"
          ports:
            - containerPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: cloudhf-postgres
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
  type: ClusterIP
---
# cloudhf-notifier Deployment and Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudhf-notifier
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notifier
  template:
    metadata:
      labels:
        app: notifier
    spec:
      containers:
        - name: notifier
          image: keromsz/cloud-hf-notifier:latest
          env:
            - name: RABBITMQ_CONNECTION
              value: "amqp://cloudhf-rabbitmq/"
          ports:
            - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: cloudhf-notifier
spec:
  selector:
    app: notifier
  type: NodePort
  ports:
    - port: 8000
      targetPort: 8000
      nodePort: 30084
---
# cloudhf-storage Deployment and Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudhf-storage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: storage
  template:
    metadata:
      labels:
        app: storage
    spec:
      containers:
        - name: storage
          image: keromsz/cloud-hf-storage:latest
          env:
            - name: POSTGRE_CONNECTION
              value: "postgresql://postgres:postgres@cloudhf-postgres:5432/cloudhf"
            - name: RABBITMQ_CONNECTION
              value: "amqp://cloudhf-rabbitmq/"
          ports:
            - containerPort: 8002
---
apiVersion: v1
kind: Service
metadata:
  name: cloudhf-storage
spec:
  selector:
    app: storage
  type: NodePort
  ports:
    - port: 8002
      targetPort: 8002
      nodePort: 30082
---
# cloudhf-object-detection Deployment and Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudhf-object-detection
spec:
  replicas: 1
  selector:
    matchLabels:
      app: object-detection
  template:
    metadata:
      labels:
        app: object-detection
    spec:
      containers:
        - name: object-detection
          image: keromsz/cloud-hf-object-detection:latest
          env:
            - name: RABBITMQ_CONNECTION
              value: "amqp://cloudhf-rabbitmq/"
---
apiVersion: v1
kind: Service
metadata:
  name: cloudhf-object-detection
spec:
  selector:
    app: object-detection
  ports:
    - port: 9000
      targetPort: 9000
  type: ClusterIP
---
# cloudhf-frontend Deployment and Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudhf-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: keromsz/cloud-hf-frontend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 5173
---
apiVersion: v1
kind: Service
metadata:
  name: cloudhf-frontend
spec:
  selector:
    app: frontend
  ports:
    - port: 5173
      targetPort: 5173
  type: NodePort
